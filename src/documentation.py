import os
import time
import json
import google.generativeai as genai
from src.config import settings

genai.configure(api_key=settings.google_api_key)


def upload_to_gemini(path, mime_type=None):
    """Uploads the given file to Gemini.

    See https://ai.google.dev/gemini-api/docs/prompting_with_media
    """
    file = genai.upload_file(path, mime_type=mime_type)
    print(f"Uploaded file '{file.display_name}' as: {file.uri}")
    return file


def wait_for_files_active(files):
    """Waits for the given files to be active.

    Some files uploaded to the Gemini API need to be processed before they can be
    used as prompt inputs. The status can be seen by querying the file's "state"
    field.

    This implementation uses a simple blocking polling loop. Production code
    should probably employ a more sophisticated approach.
    """
    print("Waiting for file processing...")
    for name in (file.name for file in files):
        file = genai.get_file(name)
        while file.state.name == "PROCESSING":
            print(".", end="", flush=True)
            time.sleep(10)
            file = genai.get_file(name)
        if file.state.name != "ACTIVE":
            raise Exception(f"File {file.name} failed to process")
    print("...all files ready")
    print()


def create_model():
    # Create the model
    generation_config = {
        "temperature": 1,
        "top_p": 0.95,
        "top_k": 64,
        "max_output_tokens": 8192,
        "response_mime_type": "text/plain",
    }

    model = genai.GenerativeModel(
        model_name="gemini-1.5-pro",
        generation_config=generation_config,
        # safety_settings = Adjust safety settings
        # See https://ai.google.dev/gemini-api/docs/safety-settings
    )
    return model


def training_model(model: genai.GenerativeModel):
    # TODO Make these files available on the local file system
    # You may need to update the file paths
    files = [
        upload_to_gemini(
            "IA especialista em Testes de Software e QA",
            mime_type="application/vnd.google-apps.document",
        ),
        upload_to_gemini(
            "DocumentoRequisitosSoftwareSIMDE_vf20080725.pdf",
            mime_type="application/pdf",
        ),
        upload_to_gemini(
            "Detalhamento de requisitos - Leitura e Emissão de Faturas Simultânea V1.docx (Converted - 2024-09-06 14:40)",
            mime_type="application/vnd.google-apps.document",
        ),
    ]

    # Some files have a processing delay. Wait for them to be ready.
    wait_for_files_active(files)

    chat_session = model.start_chat(
        history=[
            {
                "role": "user",
                "parts": [
                    files[0],
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## IA Especialista em Testes de Software e QA\n\nEntendi! Sou uma IA especialista em Testes de Software e QA e estou pronta para analisar a documentação do seu software e gerar documentos abrangentes para auxiliar no processo de testes. \n\n**Para começar, preciso da documentação do seu software.** Por favor, forneça os seguintes documentos:\n\n* **Especificação de requisitos:** Este documento descreve as funcionalidades, o comportamento e os requisitos não funcionais do software.\n* **Arquitetura do sistema:** Este documento descreve a estrutura do sistema, os componentes e suas interações.\n* **Documentação de código:**  O código-fonte do software é essencial para análise e geração de testes.\n\n**Após receber a documentação, realizarei as seguintes tarefas:**\n\n1. **Overview:**\n    * **Visão geral concisa:** Descreverei as principais funcionalidades do software, seus objetivos e o público-alvo.\n    * **Áreas de maior complexidade e risco:**  Identifico os módulos e funcionalidades que requerem maior atenção durante os testes, considerando fatores como complexidade, integrações e requisitos não funcionais. \n    * **Tecnologias, integrações e requisitos não funcionais:**  Irei detalhar as tecnologias utilizadas, as integrações com outros sistemas, e os requisitos não funcionais (desempenho, segurança, usabilidade, etc.), com base na documentação fornecida.\n2. **Módulos e Casos de Teste:**\n    * **Classificação de módulos:** Agruparei os módulos do software em categorias lógicas e significativas, como módulo de login, módulo de cadastro, módulo de relatórios, etc.\n    * **Agrupamento de casos de teste:** Organizarei os casos de teste em grupos, de acordo com os módulos aos quais se relacionam.\n    * **Lista de casos de teste:** Criarei uma lista organizada de todos os casos de teste, com nomes claros e descritivos, facilitando a navegação e organização.\n3. **Especificidade do Módulo:**\n    * **Detalhes dos casos de teste:**  Para cada módulo, fornecerei detalhes sobre os casos de teste associados, incluindo:\n        * **Nome do teste:** Um identificador claro e descritivo.\n        * **Descrição:** Uma explicação sucinta do objetivo e do escopo do teste.\n        * **Nível de criticidade:** Classificação do impacto potencial de um defeito nesse módulo como Alta, Média ou Baixa, com base nas diretrizes da "Base de Conhecimento".\n4. **Quantificação Total:**\n    * **Contagem de casos de teste por módulo:**  Calcularei o número total de casos de teste para cada módulo.\n    * **Total de casos de teste:**  Calcularei o número total de casos de teste para todos os módulos do software.\n5. **Quantificação por Criticidade:**\n    * **Contagem por criticidade (módulo):**  Calcularei a quantidade de casos de teste por nível de criticidade (Alta, Média, Baixa) para cada módulo.\n    * **Contagem por criticidade (total):**  Calcularei a quantidade de casos de teste por nível de criticidade (Alta, Média, Baixa) para o total do software.\n6. **Especificidade do Caso de Teste:**\n    * **Descrição detalhada do caso de teste:**  Para cada código ou identificador de caso de teste, fornecerei uma descrição completa, preenchendo todos os campos conforme definido na "Base de Conhecimento":\n        * ID\n        * Objetivo\n        * Pré-condições\n        * Ambiente\n        * Dados de Entrada\n        * Procedimentos\n        * Resultados Esperados\n        * Pontos de Verificação\n        * Prioridade\n        * Criticidade\n        * Data/Hora\n        * Automação (Sim/Não)\n        * Interdependências (se houver)\n        * Analista Responsável\n\n**Diretrizes para a geração dos documentos:**\n\n* **Clareza, Concisão e Organização:**  Utilizarei linguagem clara e concisa, com uma estrutura organizada para facilitar a compreensão e o uso dos documentos.\n* **Linguagem Técnica:** Utilizarei uma linguagem técnica e precisa, adequada ao contexto de testes de software.\n* **Abordagem Abrangente:** Assegurar-me-ei de que os documentos gerados sejam abrangentes e cubram todos os aspectos relevantes do software e seus testes.\n* **Informação Essencial:**  Se informações essenciais estiverem faltando na documentação fornecida, indicarei claramente quais dados são necessários para completar a análise.\n\n**Estou pronta para iniciar a análise!** Aguardo ansiosamente a documentação do seu software para começar a gerar os documentos de teste.\n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    files[1],
                    "Segue em anexo a documentação do Software",
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Análise da Documentação do Software SIMDE - Sistema Móvel de Diário Escolar\n\n**1. Overview:**\n\n**Objetivo:** O SIMDE é um sistema móvel de diário escolar projetado para auxiliar professores na gestão de turmas, aulas, notas e faltas de alunos, proporcionando agilidade, organização e acesso a informações em tempo real.\n\n**Público Alvo:**  O sistema é voltado para professores do ensino fundamental e médio, que desejam otimizar suas atividades e registrar dados de forma prática e eficiente. \n\n**Principais Funcionalidades:**\n\n* **Gerenciar Turmas:** Cadastrar, consultar e gerenciar informações sobre turmas, como disciplina, alunos e cronograma.\n* **Registrar Aulas:**  Registrar o conteúdo das aulas, datas e marcar presença dos alunos.\n* **Lançar Notas:** Registrar notas de alunos de forma simples ou composta (com itens avaliados e somatório).\n* **Registrar Faltas:**  Lançar faltas de alunos em tempo real.\n* **Exportar Dados:** Exportar dados do SIMDE para o sistema acadêmico da instituição, como aulas, notas, faltas e informações sobre turmas.\n* **Importar Dados:** Importar dados do sistema acadêmico da instituição para o SIMDE, sincronizando informações como turmas, disciplinas e alunos.\n\n**Áreas de Maior Complexidade e Risco:**\n\n* **Integração com o Sistema Acadêmico:** A integração com o sistema acadêmico da escola é um ponto crítico, exigindo testes robustos para garantir que os dados sejam sincronizados corretamente. \n* **Segurança e Controle de Acesso:** É crucial implementar medidas de segurança para garantir que apenas professores autorizados acessem o sistema e manipulem informações confidenciais.\n* **Usabilidade e Interface:** O sistema precisa ser intuitivo e fácil de usar, garantindo que os professores se adaptem facilmente à plataforma. \n\n**Tecnologias:**\n\n* **Plataforma:**  Windows Mobile (especificado para Palmtop). \n* **Sistema Operacional:** Windows 2000 ou XP (para o sistema acadêmico).\n* **Linguagem de Programação:** Não especificada na documentação.\n\n**Requisitos Não Funcionais:**\n\n* **Eficiência:**  Sincronização de dados em no máximo 30 segundos, com tempo de resposta para operações inferiores a 5 segundos.\n* **Usabilidade:** Interface amigável, fácil de aprender e com navegação intuitiva.\n* **Segurança:** Sistema seguro com controle de acesso para proteger dados confidenciais.\n* **Funcionalidade:** Implementação correta dos requisitos descritos na documentação.\n* **Transportabilidade:** O sistema deve ser facilmente adaptável para outros sistemas acadêmicos.\n* **Implantabilidade:** Implementação com acompanhamento durante um trimestre, importando dados de turmas e exportando informações relevantes.\n* **Integridade:** Sistema que garante consistência de dados e sincronização entre dispositivos.\n\n**2. Módulos e Casos de Teste:**\n\n**Módulos:**\n\n* **Gerenciamento de Turmas:**  \n    * Casos de Teste:\n        * CT-01: Cadastro de Turma\n        * CT-02: Edição de Turma\n        * CT-03: Exclusão de Turma\n        * CT-04: Consulta de Turmas\n* **Gerenciamento de Aulas:**\n    * Casos de Teste:\n        * CT-05: Cadastro de Aula\n        * CT-06: Edição de Aula\n        * CT-07: Exclusão de Aula\n        * CT-08: Consulta de Aulas \n        * CT-09: Registro de Presença em Aula\n* **Gerenciamento de Notas:**\n    * Casos de Teste:\n        * CT-10: Lançamento de Nota Simples\n        * CT-11: Lançamento de Nota Composta\n        * CT-12: Consulta de Notas\n* **Gerenciamento de Faltas:**\n    * Casos de Teste:\n        * CT-13: Registro de Falta\n        * CT-14: Consulta de Faltas\n* **Sincronização de Dados:**\n    * Casos de Teste:\n        * CT-15: Importação de Dados do Sistema Acadêmico\n        * CT-16: Exportação de Dados para o Sistema Acadêmico\n\n**3. Especificidade do Módulo:**\n\n**Exemplo: Módulo "Gerenciamento de Turmas"**\n\n* **CT-01: Cadastro de Turma:**\n    * **Nome do Teste:** CT-01 - Cadastro de Turma\n    * **Descrição:**  Testar o cadastro de uma nova turma no sistema, incluindo informações como disciplina, professor, turno e alunos. \n    * **Criticidade:** Alta - Um erro nesse módulo pode impedir a organização e o acompanhamento das turmas pelos professores.\n\n**4. Quantificação Total:**\n\n* **Total de Casos de Teste:** 16 \n\n**5. Quantificação por Criticidade:**\n\n| Módulo             | Alta | Média | Baixa | Total |\n|---------------------|------|-------|-------|-------|\n| Gerenciamento Turmas | 3    | 1     | 0     | 4     |\n| Gerenciamento Aulas   | 4    | 1     | 0     | 5     |\n| Gerenciamento Notas | 2    | 1     | 0     | 3     |\n| Gerenciamento Faltas | 2    | 1     | 0     | 3     |\n| Sincronização Dados | 3    | 1     | 0     | 4     |\n| **Total**            | **14** | **5**  | **0**  | **19** |\n\n**6. Especificidade do Caso de Teste:**\n\n**Exemplo: CT-01 - Cadastro de Turma:**\n\n* **ID:** CT-01\n* **Objetivo:** Verificar se é possível cadastrar uma nova turma no sistema.\n* **Pré-condições:**  O usuário deve estar logado no sistema com permissões para gerenciar turmas.\n* **Ambiente:** Dispositivo móvel com o SIMDE instalado.\n* **Dados de Entrada:** Nome da turma, disciplina, professor, turno e alunos.\n* **Procedimentos:**\n    1. Acessar o módulo "Gerenciamento de Turmas".\n    2. Clicar no botão "Nova Turma".\n    3. Preencher os campos obrigatórios com os dados da turma.\n    4. Clicar no botão "Salvar".\n* **Resultados Esperados:** O sistema deve registrar a nova turma no banco de dados, exibindo uma mensagem de confirmação.\n* **Pontos de Verificação:**\n    * A turma deve ser registrada no sistema.\n    * Os dados da turma devem ser salvos corretamente.\n    * O sistema deve exibir uma mensagem de sucesso. \n* **Prioridade:** Alta \n* **Criticidade:** Alta \n* **Data/Hora:** [Data e hora do teste]\n* **Automação:** Sim/Não (especificar se o teste pode ser automatizado)\n* **Interdependências:** Nenhuma\n* **Analista Responsável:** [Nome do Analista]\n\n**Observações:**\n\n* A documentação do SIMDE não especifica a linguagem de programação utilizada, o que pode dificultar a geração de testes automatizados. \n* A falta de detalhes sobre a implementação do sistema acadêmico impede uma análise mais aprofundada da integração entre os sistemas.\n\n**Sugestões:**\n\n* Adicionar um diagrama de classes para melhor visualização da arquitetura do sistema.\n* Complementar a especificação de requisitos com cenários de uso para detalhar o fluxo de interação do usuário com o sistema.\n* Detalhar os procedimentos de sincronização de dados entre o SIMDE e o sistema acadêmico. \n\n**Conclusão:**\n\nA documentação do SIMDE apresenta informações relevantes para o planejamento e execução dos testes. No entanto, a falta de alguns detalhes sobre a implementação do sistema e a linguagem de programação utilizada podem dificultar a criação de testes mais abrangentes e eficazes. Com base nas sugestões acima, a documentação pode ser aprimorada para oferecer uma base mais completa para o processo de testes. \n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    "gostei da resposta, mas talvez devido a limitação de token na saída da resposta ficou faltando informação, então neste momento faça o seguinte:\n\n - Gere o documento 'Overview' para o software SIMDE\n",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "## Overview - Sistema Móvel de Diário Escolar (SIMDE)\n\n**Objetivo:** O Sistema Móvel de Diário Escolar (SIMDE) é uma aplicação móvel desenvolvida para auxiliar professores no registro e gerenciamento de dados acadêmicos de seus alunos. O objetivo principal do SIMDE é facilitar o trabalho docente, otimizando o tempo e a organização das atividades pedagógicas, além de proporcionar acesso rápido e eficiente às informações relevantes sobre cada turma.\n\n**Público Alvo:** O SIMDE é direcionado para professores do ensino fundamental e médio que utilizam dispositivos móveis com sistema operacional Windows Mobile. \n\n**Principais Funcionalidades:**\n\n* **Gerenciamento de Turmas:** O SIMDE permite que o professor gerencie suas turmas, acessando informações como nome dos alunos, disciplinas, horários e cronogramas das aulas. \n* **Registro de Aulas:** O sistema possibilita o registro do conteúdo das aulas, data e hora da aula e a marcação de presença dos alunos. \n* **Lançamento de Notas:** O professor pode lançar notas dos alunos de forma simples (inserindo apenas a nota numérica) ou composta (com a inclusão de itens avaliados, nota de cada item e o somatório das notas).\n* **Registro de Faltas:** O SIMDE facilita o registro das faltas dos alunos em tempo real, com a possibilidade de visualizar o histórico de faltas de cada estudante.\n* **Sincronização com o Sistema Acadêmico:**  O sistema permite a sincronização de dados entre o SIMDE e o sistema acadêmico da escola, garantindo a atualização e a consistência das informações. Os dados podem ser exportados (do SIMDE para o sistema acadêmico) e importados (do sistema acadêmico para o SIMDE). \n\n**Áreas de Maior Complexidade e Risco:**\n\n* **Integração com o Sistema Acadêmico:** A integração com o sistema acadêmico da escola representa um desafio crítico. É crucial garantir que a comunicação entre os sistemas seja robusta e eficiente para evitar perda de dados e garantir a sincronização correta das informações.\n* **Segurança e Controle de Acesso:**  A segurança dos dados e a privacidade das informações dos alunos são prioridades. O SIMDE deve implementar medidas rigorosas de controle de acesso, garantindo que apenas professores autorizados acessem o sistema e manipulem as informações.\n* **Usabilidade e Interface:**  A interface do SIMDE deve ser intuitiva, amigável e fácil de usar, permitindo que os professores se adaptem rapidamente ao sistema e naveguem com facilidade pelas funcionalidades. \n\n**Tecnologias:**\n\n* **Plataforma:**  Windows Mobile (especificado para Palmtop). \n* **Sistema Operacional:** Windows 2000 ou XP (para o sistema acadêmico).\n* **Linguagem de Programação:** A documentação não especifica a linguagem de programação utilizada. \n\n**Requisitos Não Funcionais:**\n\n* **Eficiência:**  O sistema deve ser rápido e eficiente, com tempos de resposta curtos para as operações de sincronização de dados, registro de informações e consulta de dados. \n* **Usabilidade:**  A interface do SIMDE deve ser intuitiva, amigável e fácil de aprender, garantindo uma experiência positiva para os professores.\n* **Segurança:** O SIMDE deve garantir a segurança dos dados e a privacidade das informações dos alunos, implementando mecanismos de controle de acesso e criptografia de dados.\n* **Funcionalidade:** O sistema deve atender aos requisitos definidos na documentação, executando as funcionalidades de forma correta e precisa.\n* **Transportabilidade:** O sistema deve ser facilmente adaptável para outros sistemas acadêmicos, minimizando o esforço necessário para a implementação.\n* **Implantabilidade:**  O processo de implantação do SIMDE deve ser tranquilo e gradual, com a possibilidade de usar o sistema em paralelo com o método manual durante um período de adaptação.\n* **Integridade:**  O sistema deve garantir a integridade dos dados, assegurando a consistência das informações entre os diferentes dispositivos e sistemas.\n\n\n**Conclusão:** \n\nO SIMDE apresenta uma solução inovadora e útil para a gestão escolar. Com uma interface intuitiva e funcionalidades completas, o sistema tem o potencial de facilitar o trabalho dos professores e otimizar o processo de ensino-aprendizagem. No entanto, a implementação do sistema exige atenção especial para a segurança dos dados, a integração com o sistema acadêmico e a usabilidade da interface.  A equipe de desenvolvimento deve dedicar tempo e recursos para garantir a qualidade e a segurança do sistema, para que ele atenda às necessidades dos professores e contribua para a melhoria do processo educacional. \n",
                ],
            },
            {
                "role": "user",
                "parts": [
                    "Ótimo!!! agora faça o seguinte:\n - Gere o documento 'Módulos e Casos de Teste' para o software SIMDE.",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "## Módulos e Casos de Teste - Sistema Móvel de Diário Escolar (SIMDE)\n\n**1.  Módulos:**\n\nOs módulos do SIMDE foram agrupados em categorias lógicas para facilitar a organização e a criação de casos de teste:\n\n**1.1 Gerenciamento de Turmas:**\n    *  Este módulo abrange as funcionalidades relacionadas ao cadastro, edição, exclusão e consulta de informações sobre as turmas, incluindo:\n        *  Nome da Turma\n        *  Disciplina\n        *  Professor\n        *  Turno\n        *  Alunos\n\n**1.2 Gerenciamento de Aulas:**\n    *  Este módulo engloba as funcionalidades relacionadas ao registro, edição, exclusão e consulta de aulas, incluindo:\n        *  Data e Hora da Aula\n        *  Conteúdo da Aula\n        *  Registro de Presença dos Alunos\n\n**1.3 Gerenciamento de Notas:**\n    *  Este módulo abrange as funcionalidades relacionadas ao lançamento, edição e consulta de notas dos alunos, incluindo:\n        *  Lançamento de Nota Simples\n        *  Lançamento de Nota Composta (com itens avaliados e somatório)\n        *  Consulta de Notas de Alunos\n\n**1.4 Gerenciamento de Faltas:**\n    *  Este módulo engloba as funcionalidades relacionadas ao registro, edição e consulta de faltas dos alunos, incluindo:\n        *  Registro de Faltas\n        *  Consulta de Faltas de Alunos\n\n**1.5 Sincronização de Dados:**\n    *  Este módulo abrange as funcionalidades relacionadas à comunicação e troca de informações entre o SIMDE e o Sistema Acadêmico da escola, incluindo:\n        *  Importação de Dados do Sistema Acadêmico (turmas, disciplinas, alunos)\n        *  Exportação de Dados para o Sistema Acadêmico (aulas, notas, faltas)\n\n\n**2. Casos de Teste:**\n\n**2.1 Gerenciamento de Turmas:**\n\n* **CT-01:** Cadastro de Turma - Verificar se é possível cadastrar uma nova turma no sistema, incluindo todos os campos obrigatórios e opcionais.\n* **CT-02:** Edição de Turma - Verificar se é possível editar os dados de uma turma já cadastrada, modificando informações como nome, disciplina, professor, turno e alunos.\n* **CT-03:** Exclusão de Turma - Verificar se é possível excluir uma turma do sistema, garantindo que os dados relacionados sejam deletados corretamente.\n* **CT-04:** Consulta de Turmas - Verificar se é possível consultar as turmas cadastradas no sistema, filtrando por disciplina, professor, turno ou nome da turma.\n\n\n**2.2 Gerenciamento de Aulas:**\n\n* **CT-05:** Cadastro de Aula - Verificar se é possível cadastrar uma nova aula, incluindo data, hora, conteúdo e turma.\n* **CT-06:** Edição de Aula - Verificar se é possível editar os dados de uma aula já cadastrada, modificando data, hora, conteúdo e turma.\n* **CT-07:** Exclusão de Aula - Verificar se é possível excluir uma aula do sistema, garantindo que os dados relacionados sejam deletados corretamente.\n* **CT-08:** Consulta de Aulas - Verificar se é possível consultar as aulas cadastradas no sistema, filtrando por data, disciplina ou turma.\n* **CT-09:** Registro de Presença em Aula - Verificar se é possível registrar a presença dos alunos em uma aula, marcando presença ou ausência.\n\n\n**2.3 Gerenciamento de Notas:**\n\n* **CT-10:** Lançamento de Nota Simples - Verificar se é possível lançar uma nota simples para um aluno, inserindo apenas a nota numérica.\n* **CT-11:** Lançamento de Nota Composta - Verificar se é possível lançar uma nota composta para um aluno, incluindo itens avaliados, nota de cada item e o somatório das notas.\n* **CT-12:** Consulta de Notas - Verificar se é possível consultar as notas dos alunos, filtrando por turma, disciplina ou aluno.\n\n\n**2.4 Gerenciamento de Faltas:**\n\n* **CT-13:** Registro de Falta - Verificar se é possível registrar a falta de um aluno em uma aula, incluindo data e motivo da falta.\n* **CT-14:** Consulta de Faltas - Verificar se é possível consultar o histórico de faltas dos alunos, filtrando por turma, disciplina ou aluno.\n\n**2.5 Sincronização de Dados:**\n\n* **CT-15:** Importação de Dados do Sistema Acadêmico - Verificar se é possível importar dados do sistema acadêmico para o SIMDE, sincronizando informações como turmas, disciplinas e alunos.\n* **CT-16:** Exportação de Dados para o Sistema Acadêmico - Verificar se é possível exportar dados do SIMDE para o sistema acadêmico, incluindo informações sobre aulas, notas e faltas.\n\n**Observações:**\n\n* Esta lista de casos de teste é apenas um guia inicial. A equipe de testes deve analisar a documentação do sistema e identificar outros casos de teste relevantes para garantir a qualidade e o bom funcionamento do SIMDE. \n*  A prioridade dos casos de teste deve ser definida levando em consideração o risco e a criticidade de cada funcionalidade. \n* É recomendado utilizar ferramentas de gestão de testes para organizar os casos de teste e acompanhar o progresso das atividades.\n\n\n**Conclusão:**\n\nA organização dos módulos e a criação de casos de teste específicos para cada funcionalidade do SIMDE facilitam o planejamento e a execução das atividades de teste. Essa estrutura contribui para a identificação de falhas, a garantia da qualidade do software e a entrega de um sistema eficiente e eficaz para os professores. \n\n",
                ],
            },
            {
                "role": "user",
                "parts": [
                    "Ótimo!!! agora faça o seguinte:\n - Gere o documento 'Especificidade do Módulo' para o módulo '2.2 Gerenciamento de Aulas' do software SIMDE.",
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Especificidade do Módulo: 2.2 Gerenciamento de Aulas - Sistema Móvel de Diário Escolar (SIMDE)\n\n**2.2.1 CT-05: Cadastro de Aula:**\n\n* **Nome do Teste:** CT-05 - Cadastro de Aula\n* **Descrição:**  Verificar se é possível cadastrar uma nova aula no sistema, incluindo data, hora, conteúdo e turma. \n* **Criticidade:** Alta - Um erro nesse módulo pode impedir que o professor registre suas aulas corretamente, impactando o planejamento e o acompanhamento das atividades.\n* **Objetivo:** Validar a funcionalidade de cadastro de novas aulas no sistema.\n\n* **Pré-condições:**\n    * O usuário deve estar logado no sistema com permissões para gerenciar aulas.\n    * A turma para a qual a aula será cadastrada já deve estar criada no sistema.\n* **Ambiente:** Dispositivo móvel com o SIMDE instalado.\n* **Dados de Entrada:**\n    * Data da aula (DD/MM/AAAA).\n    * Hora da aula (HH:MM).\n    * Conteúdo da aula (texto livre).\n    * Turma (selecionar a turma desejada).\n* **Procedimentos:**\n    1. Acessar o módulo "Gerenciamento de Aulas".\n    2. Clicar no botão "Nova Aula".\n    3. Preencher os campos obrigatórios com os dados da aula.\n    4. Clicar no botão "Salvar".\n* **Resultados Esperados:**\n    * O sistema deve registrar a nova aula no banco de dados, exibindo uma mensagem de confirmação.\n    * A aula cadastrada deve ser visível na lista de aulas da turma correspondente. \n* **Pontos de Verificação:**\n    * A aula deve ser registrada no sistema.\n    * Os dados da aula devem ser salvos corretamente (data, hora, conteúdo, turma).\n    * O sistema deve exibir uma mensagem de sucesso após o cadastro.\n* **Prioridade:** Alta\n* **Criticidade:** Alta\n* **Data/Hora:** [Data e hora do teste]\n* **Automação:** Sim/Não (especificar se o teste pode ser automatizado)\n* **Interdependências:** Nenhuma\n* **Analista Responsável:** [Nome do Analista]\n\n**2.2.2 CT-06: Edição de Aula:**\n\n* **Nome do Teste:** CT-06 - Edição de Aula\n* **Descrição:**  Verificar se é possível editar os dados de uma aula já cadastrada, modificando data, hora, conteúdo e turma. \n* **Criticidade:** Alta - Um erro nesse módulo pode levar a informações incorretas sobre as aulas, prejudicando o planejamento e o acompanhamento das atividades.\n* **Objetivo:** Validar a funcionalidade de edição de aulas existentes no sistema.\n\n* **Pré-condições:**\n    * O usuário deve estar logado no sistema com permissões para gerenciar aulas.\n    * A aula a ser editada já deve estar criada no sistema.\n* **Ambiente:** Dispositivo móvel com o SIMDE instalado.\n* **Dados de Entrada:**\n    *  A aula a ser editada (selecionar a aula desejada).\n    *  Novos dados para a aula:\n        *  Data (DD/MM/AAAA).\n        *  Hora (HH:MM).\n        *  Conteúdo (texto livre).\n        *  Turma (selecionar a turma desejada).\n* **Procedimentos:**\n    1. Acessar o módulo "Gerenciamento de Aulas".\n    2. Selecionar a aula que deseja editar.\n    3. Clicar no botão "Editar".\n    4. Modificar os campos desejados.\n    5. Clicar no botão "Salvar".\n* **Resultados Esperados:**\n    * O sistema deve atualizar os dados da aula no banco de dados, exibindo uma mensagem de confirmação.\n    * A aula editada deve refletir as alterações realizadas na lista de aulas da turma correspondente.\n* **Pontos de Verificação:**\n    * Os dados da aula devem ser atualizados corretamente.\n    * O sistema deve exibir uma mensagem de sucesso após a edição.\n* **Prioridade:** Alta\n* **Criticidade:** Alta\n* **Data/Hora:** [Data e hora do teste]\n* **Automação:** Sim/Não (especificar se o teste pode ser automatizado)\n* **Interdependências:** Nenhuma\n* **Analista Responsável:** [Nome do Analista]\n\n**2.2.3 CT-07: Exclusão de Aula:**\n\n* **Nome do Teste:** CT-07 - Exclusão de Aula\n* **Descrição:**  Verificar se é possível excluir uma aula do sistema, garantindo que os dados relacionados sejam deletados corretamente.\n* **Criticidade:** Alta - Um erro nesse módulo pode resultar em informações desatualizadas ou inconsistentes sobre as aulas, afetando o planejamento e o acompanhamento das atividades.\n* **Objetivo:** Validar a funcionalidade de exclusão de aulas do sistema.\n\n* **Pré-condições:**\n    * O usuário deve estar logado no sistema com permissões para gerenciar aulas.\n    * A aula a ser excluída já deve estar criada no sistema.\n* **Ambiente:** Dispositivo móvel com o SIMDE instalado.\n* **Dados de Entrada:**\n    * A aula a ser excluída (selecionar a aula desejada).\n* **Procedimentos:**\n    1. Acessar o módulo "Gerenciamento de Aulas".\n    2. Selecionar a aula que deseja excluir.\n    3. Clicar no botão "Excluir".\n    4. Confirmar a exclusão da aula.\n* **Resultados Esperados:**\n    * O sistema deve remover a aula do banco de dados, exibindo uma mensagem de confirmação.\n    * A aula excluída não deve mais estar visível na lista de aulas da turma correspondente.\n* **Pontos de Verificação:**\n    * A aula deve ser removida do sistema.\n    * O sistema deve exibir uma mensagem de sucesso após a exclusão.\n* **Prioridade:** Alta\n* **Criticidade:** Alta\n* **Data/Hora:** [Data e hora do teste]\n* **Automação:** Sim/Não (especificar se o teste pode ser automatizado)\n* **Interdependências:** Nenhuma\n* **Analista Responsável:** [Nome do Analista]\n\n**2.2.4 CT-08: Consulta de Aulas:**\n\n* **Nome do Teste:** CT-08 - Consulta de Aulas\n* **Descrição:**  Verificar se é possível consultar as aulas cadastradas no sistema, filtrando por data, disciplina ou turma. \n* **Criticidade:** Média - Um erro nesse módulo pode dificultar a busca por informações sobre as aulas, mas não impede o registro ou a edição de dados.\n* **Objetivo:** Validar a funcionalidade de consulta de aulas no sistema.\n\n* **Pré-condições:**\n    * O usuário deve estar logado no sistema com permissões para gerenciar aulas.\n    * Pelo menos uma aula deve estar cadastrada no sistema.\n* **Ambiente:** Dispositivo móvel com o SIMDE instalado.\n* **Dados de Entrada:**\n    *  Critérios de filtro (opcional):\n        *  Data (DD/MM/AAAA).\n        *  Disciplina (selecionar a disciplina desejada).\n        *  Turma (selecionar a turma desejada).\n* **Procedimentos:**\n    1. Acessar o módulo "Gerenciamento de Aulas".\n    2. (Opcional) Selecionar os critérios de filtro desejados.\n    3. Clicar no botão "Pesquisar" ou "Filtrar".\n* **Resultados Esperados:**\n    * O sistema deve exibir a lista de aulas correspondente aos filtros selecionados (ou todas as aulas, caso nenhum filtro seja aplicado).\n    * A lista de aulas deve conter informações como data, hora, conteúdo e turma.\n* **Pontos de Verificação:**\n    * As aulas exibidas devem corresponder aos filtros selecionados (ou a todas as aulas, caso nenhum filtro seja aplicado).\n    * As informações sobre as aulas devem estar corretas e completas.\n* **Prioridade:** Média\n* **Criticidade:** Média\n* **Data/Hora:** [Data e hora do teste]\n* **Automação:** Sim/Não (especificar se o teste pode ser automatizado)\n* **Interdependências:** Nenhuma\n* **Analista Responsável:** [Nome do Analista]\n\n**2.2.5 CT-09: Registro de Presença em Aula:**\n\n* **Nome do Teste:** CT-09 - Registro de Presença em Aula\n* **Descrição:**  Verificar se é possível registrar a presença dos alunos em uma aula, marcando presença ou ausência. \n* **Criticidade:** Alta - Um erro nesse módulo pode levar a informações incorretas sobre a presença dos alunos, afetando o cálculo de notas e o acompanhamento da frequência dos estudantes.\n* **Objetivo:** Validar a funcionalidade de registrar a presença dos alunos em cada aula.\n\n* **Pré-condições:**\n    * O usuário deve estar logado no sistema com permissões para gerenciar aulas.\n    * A aula para a qual a presença será registrada já deve estar criada no sistema.\n    * A turma da aula deve ter alunos cadastrados.\n* **Ambiente:** Dispositivo móvel com o SIMDE instalado.\n* **Dados de Entrada:**\n    * A aula para a qual a presença será registrada (selecionar a aula desejada).\n    * A lista de alunos da turma.\n    * A presença de cada aluno (marcar "Presente" ou "Ausente").\n* **Procedimentos:**\n    1. Acessar o módulo "Gerenciamento de Aulas".\n    2. Selecionar a aula para a qual deseja registrar a presença.\n    3. Visualizar a lista de alunos da turma.\n    4. Marcar "Presente" ou "Ausente" para cada aluno.\n    5. Confirmar o registro da presença.\n* **Resultados Esperados:**\n    * O sistema deve registrar a presença dos alunos na aula selecionada, atualizando o banco de dados.\n    *  O sistema deve exibir uma mensagem de confirmação após o registro da presença.\n* **Pontos de Verificação:**\n    * A presença de cada aluno deve ser registrada corretamente.\n    * O sistema deve exibir a lista de presença atualizada da aula.\n* **Prioridade:** Alta\n* **Criticidade:** Alta\n* **Data/Hora:** [Data e hora do teste]\n* **Automação:** Sim/Não (especificar se o teste pode ser automatizado)\n* **Interdependências:** Nenhuma\n* **Analista Responsável:** [Nome do Analista]\n\n**Observações:**\n\n* É importante considerar cenários específicos para cada caso de teste, como por exemplo:\n    * CT-05: Cadastrar uma aula com data e hora no passado.\n    * CT-06: Editar a data de uma aula para uma data no futuro.\n    * CT-07: Excluir uma aula para a qual já existem notas registradas.\n    * CT-08: Consultar aulas por data, disciplina e turma combinadas.\n    * CT-09: Registrar a presença de alunos que não estão na lista da turma.\n\n* A equipe de testes deve analisar a documentação do sistema e identificar outros casos de teste relevantes para garantir a qualidade e o bom funcionamento do módulo "Gerenciamento de Aulas" do SIMDE. \n\n* A prioridade dos casos de teste deve ser definida levando em consideração o risco e a criticidade de cada funcionalidade. \n\n* É recomendado utilizar ferramentas de gestão de testes para organizar os casos de teste e acompanhar o progresso das atividades.\n\n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    'refaça essa resposta somente com as seguintes informações para cada teste do módulo especificado:\n - Nome do teste: Um identificador claro e descritivo.\n - Descrição: Uma explicação sucinta do objetivo e do escopo do teste.\n - Nível de criticidade: Classificação do impacto potencial de um defeito nesse módulo como Alta, Média ou Baixa, com base nas diretrizes da "Base de Conhecimento".',
                ],
            },
            {
                "role": "model",
                "parts": [
                    "## Especificidade do Módulo: 2.2 Gerenciamento de Aulas - Sistema Móvel de Diário Escolar (SIMDE)\n\n**2.2.1 CT-05: Cadastro de Aula:**\n\n* **Nome do Teste:** CT-05 - Cadastro de Aula\n* **Descrição:** Verificar se é possível cadastrar uma nova aula no sistema, incluindo data, hora, conteúdo e turma.\n* **Nível de Criticidade:** Alta - Um erro nesse módulo pode impedir que o professor registre suas aulas corretamente, impactando o planejamento e o acompanhamento das atividades.\n\n**2.2.2 CT-06: Edição de Aula:**\n\n* **Nome do Teste:** CT-06 - Edição de Aula\n* **Descrição:** Verificar se é possível editar os dados de uma aula já cadastrada, modificando data, hora, conteúdo e turma.\n* **Nível de Criticidade:** Alta - Um erro nesse módulo pode levar a informações incorretas sobre as aulas, prejudicando o planejamento e o acompanhamento das atividades.\n\n**2.2.3 CT-07: Exclusão de Aula:**\n\n* **Nome do Teste:** CT-07 - Exclusão de Aula\n* **Descrição:** Verificar se é possível excluir uma aula do sistema, garantindo que os dados relacionados sejam deletados corretamente.\n* **Nível de Criticidade:** Alta - Um erro nesse módulo pode resultar em informações desatualizadas ou inconsistentes sobre as aulas, afetando o planejamento e o acompanhamento das atividades.\n\n**2.2.4 CT-08: Consulta de Aulas:**\n\n* **Nome do Teste:** CT-08 - Consulta de Aulas\n* **Descrição:** Verificar se é possível consultar as aulas cadastradas no sistema, filtrando por data, disciplina ou turma.\n* **Nível de Criticidade:** Média - Um erro nesse módulo pode dificultar a busca por informações sobre as aulas, mas não impede o registro ou a edição de dados.\n\n**2.2.5 CT-09: Registro de Presença em Aula:**\n\n* **Nome do Teste:** CT-09 - Registro de Presença em Aula\n* **Descrição:** Verificar se é possível registrar a presença dos alunos em uma aula, marcando presença ou ausência.\n* **Nível de Criticidade:** Alta - Um erro nesse módulo pode levar a informações incorretas sobre a presença dos alunos, afetando o cálculo de notas e o acompanhamento da frequência dos estudantes. \n\n\n",
                ],
            },
            {
                "role": "user",
                "parts": [
                    "Ótimo!!! agora faça o seguinte:\n - Gere o documento 'Especificidade do Caso de Teste' do teste 'CT-05: Cadastro de Aula' do software SIMDE.",
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Especificidade do Caso de Teste: CT-05 - Cadastro de Aula - Sistema Móvel de Diário Escolar (SIMDE)\n\n**ID:** CT-05\n\n**Objetivo:** Verificar se é possível cadastrar uma nova aula no sistema, incluindo todos os campos obrigatórios e opcionais.\n\n**Pré-condições:**\n\n* O usuário deve estar logado no sistema com permissões para gerenciar aulas.\n* A turma para a qual a aula será cadastrada já deve estar criada no sistema.\n\n**Ambiente:** Dispositivo móvel com o SIMDE instalado.\n\n**Dados de Entrada:**\n\n* **Data da aula:** 15/03/2023 (DD/MM/AAAA).\n* **Hora da aula:** 10:00 (HH:MM).\n* **Conteúdo da aula:** "Introdução à Programação em Python".\n* **Turma:** "Engenharia de Software 1" (selecionar a turma desejada).\n\n**Procedimentos:**\n\n1. Acessar o módulo "Gerenciamento de Aulas".\n2. Clicar no botão "Nova Aula".\n3. Preencher os campos obrigatórios com os dados da aula:\n    * Data da aula: 15/03/2023.\n    * Hora da aula: 10:00.\n    * Conteúdo da aula: "Introdução à Programação em Python".\n    * Turma: "Engenharia de Software 1".\n4. Clicar no botão "Salvar".\n\n**Resultados Esperados:**\n\n* O sistema deve registrar a nova aula no banco de dados, exibindo uma mensagem de confirmação como "Aula cadastrada com sucesso!".\n* A aula cadastrada deve ser visível na lista de aulas da turma "Engenharia de Software 1", com os dados preenchidos corretamente. \n\n**Pontos de Verificação:**\n\n* A aula deve ser registrada no sistema com o ID gerado automaticamente.\n* Os dados da aula devem ser salvos corretamente: 15/03/2023, 10:00, "Introdução à Programação em Python", "Engenharia de Software 1".\n* O sistema deve exibir uma mensagem de sucesso após o cadastro.\n\n**Prioridade:** Alta\n\n**Criticidade:** Alta\n\n**Data/Hora:** [Data e hora do teste]\n\n**Automação:** Sim/Não (especificar se o teste pode ser automatizado)\n\n**Interdependências:** Nenhuma\n\n**Analista Responsável:** [Nome do Analista]\n\n\n**Observações:**\n\n* É importante testar o cadastro de aulas com diferentes formatos de data e hora, para garantir que o sistema aceite diferentes padrões.\n*  Verifique se o sistema aceita conteúdos de aula com diferentes tamanhos e tipos de caracteres (texto, números, símbolos).\n*  Teste o cadastro de aulas para diferentes turmas para garantir que o sistema funcione corretamente.\n\n**Cenários de Teste:**\n\n* **Cenário 1:** Cadastrar uma aula com data e hora no passado.\n* **Cenário 2:** Cadastrar uma aula com data e hora no futuro.\n* **Cenário 3:** Cadastrar uma aula com conteúdo de aula muito longo.\n* **Cenário 4:** Cadastrar uma aula com conteúdo de aula com caracteres especiais.\n\n**Sugestões:**\n\n* Utilize ferramentas de automação de testes para automatizar a execução do teste e garantir a repetibilidade dos resultados.\n* Documente os passos do teste de forma clara e concisa, para que outros membros da equipe possam reproduzir o teste facilmente.\n\n**Conclusão:**\n\nA realização do teste CT-05 é crucial para garantir que a funcionalidade de cadastro de aula no SIMDE esteja funcionando corretamente. O teste deve ser executado com diferentes cenários para garantir a robustez e a confiabilidade do sistema.\n\n\n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    "Ótimo!!! agora faça o seguinte:\n - Gere o documento 'Quantificação Total' do software SIMDE.",
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Quantificação Total - Sistema Móvel de Diário Escolar (SIMDE)\n\n**Número de Casos de Teste por Módulo:**\n\n| Módulo             | Total de Casos de Teste |\n|---------------------|-----------------------|\n| Gerenciamento Turmas | 4                      |\n| Gerenciamento Aulas   | 5                      |\n| Gerenciamento Notas | 3                      |\n| Gerenciamento Faltas | 3                      |\n| Sincronização Dados | 4                      |\n\n**Total de Casos de Teste:** 19\n\n**Observações:**\n\n* Esta quantificação considera os casos de teste listados nos documentos "Módulos e Casos de Teste" e "Especificidade do Módulo".\n* O número total de casos de teste pode variar, dependendo da complexidade do sistema e do nível de detalhamento desejado nos testes.\n* É importante realizar uma análise de risco para identificar as áreas do sistema que requerem maior atenção durante os testes e definir o número adequado de casos de teste para cada módulo.\n\n**Conclusão:**\n\nO SIMDE possui um total de 19 casos de teste, distribuídos entre os 5 módulos principais. Essa quantificação inicial fornece uma base para o planejamento e execução das atividades de teste, garantindo que todas as funcionalidades do sistema sejam verificadas com o devido rigor. \n\n\n\n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    "Ótimo!! agora faça o seguinte:\n - Gere o documento 'Quantificação por Criticidade' do software SIMDE.",
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Quantificação por Criticidade - Sistema Móvel de Diário Escolar (SIMDE)\n\n**Quantificação por Criticidade (Módulo):**\n\n| Módulo             | Alta | Média | Baixa | Total |\n|---------------------|------|-------|-------|-------|\n| Gerenciamento Turmas | 3    | 1     | 0     | 4     |\n| Gerenciamento Aulas   | 4    | 1     | 0     | 5     |\n| Gerenciamento Notas | 2    | 1     | 0     | 3     |\n| Gerenciamento Faltas | 2    | 1     | 0     | 3     |\n| Sincronização Dados | 3    | 1     | 0     | 4     |\n\n**Quantificação por Criticidade (Total):**\n\n| Nível de Criticidade | Total de Casos de Teste |\n|----------------------|-----------------------|\n| Alta                 | 14                      |\n| Média                | 5                      |\n| Baixa                | 0                      |\n\n**Observações:**\n\n*  A quantificação por criticidade considera a classificação de cada caso de teste, conforme definido nos documentos "Módulos e Casos de Teste" e "Especificidade do Módulo".\n*  A priorização dos testes deve levar em consideração o nível de criticidade de cada caso de teste, dedicando mais tempo e atenção aos testes com alta criticidade.\n*  A análise de risco pode ajudar a determinar a criticidade de cada caso de teste, levando em conta o impacto potencial de um defeito na funcionalidade do sistema.\n\n**Conclusão:**\n\nO SIMDE possui 14 casos de teste com alta criticidade, 5 casos com média criticidade e nenhum caso com baixa criticidade. Essa informação é essencial para a equipe de testes priorizar os testes com maior risco e impacto no sistema, garantindo que os recursos sejam alocados de forma eficiente para minimizar os riscos e garantir a qualidade do software. \n\n\n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    "Ótimo!\n\nagora vou lhe dar outra documentação de outro software, ok?\n",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "Ok! Estou pronta para analisar a documentação do novo software. Por favor, me envie os documentos necessários, como:\n\n* **Especificação de requisitos:** Descrevendo as funcionalidades, comportamento e requisitos não funcionais do software.\n* **Arquitetura do sistema:** Detalhando a estrutura do sistema, seus componentes e suas interações.\n* **Documentação de código:** O código-fonte do software é essencial para a análise e a geração de testes.\n\nAssim que receber a documentação, irei iniciar a análise e gerar os documentos de teste para auxiliar no processo de desenvolvimento.\n\nEstou ansiosa para começar! 😄\n",
                ],
            },
            {
                "role": "user",
                "parts": [
                    files[2],
                    'Gere para mim o documento "Overview" da documentação do software em anexo',
                ],
            },
            {
                "role": "model",
                "parts": [
                    "## Overview - Sistema de Leitura e Emissão de Faturas Simultânea \n\n**Objetivo:** O sistema de Leitura e Emissão de Faturas Simultânea é uma solução móvel para automatizar o processo de leitura de hidrômetros, cálculo de consumo, emissão de faturas e gestão de dados de clientes da SANASA. O objetivo principal é modernizar, agilizar e aumentar a eficiência das operações de leitura, proporcionando aos leituristas uma ferramenta intuitiva e completa para o registro de dados em campo, além de otimizar a comunicação e o fluxo de informações com o sistema de faturamento da empresa.\n\n**Público Alvo:** O sistema é direcionado aos leituristas da SANASA, que utilizam dispositivos móveis (smartphones ou tablets) com sistema operacional Android para realizar a leitura de hidrômetros em campo.\n\n**Principais Funcionalidades:**\n\n* **Login e Autenticação:** Permite aos leituristas efetuar login no sistema utilizando suas credenciais, garantindo o controle de acesso e a segurança das informações. \n* **Gerenciamento de Tarefas:**  O sistema recebe as tarefas de leitura do dia, organizadas por logradouro e sequência de imóveis, facilitando o trabalho do leiturista e o acompanhamento do progresso das atividades.\n* **Registro de Leituras:** Permite o registro da leitura do hidrômetro, com validação automática do consumo, detecção de anomalias e registro de ocorrências.\n* **Cálculo de Consumo:** Calcula o consumo de água com base na leitura atual e anterior, aplicando tarifas e regras de negócio específicas da SANASA.\n* **Emissão de Faturas:** Emite faturas impressas em tempo real, com layout padronizado, QR Code para pagamento via PIX e código de barras para pagamento via boleto.\n* **Gestão de Dados do Consumidor:** Permite visualizar e atualizar informações cadastrais dos consumidores, como categoria, tipo de ligação, endereço e dados de contato.\n* **Gerenciamento de Ocorrências:** Oferece uma lista completa de ocorrências para o leiturista registrar situações encontradas em campo, como hidrômetro quebrado, vazamento, imóvel fechado, etc. \n* **Impressão de Relatórios:** Gera relatórios de acompanhamento das atividades do leiturista, como lista de leituras realizadas, ocorrências registradas e pendências.\n* **Integração com o Sistema de Faturamento:** Envia os dados das leituras e ocorrências para o sistema de faturamento da SANASA em tempo real, via API REST, agilizando o processamento das informações.\n* **Sincronização de Dados:**  Permite a sincronização manual ou automática dos dados entre o aplicativo móvel e o backend, garantindo a consistência e atualização das informações.\n* **Gerenciamento de Mensagens:**  Exibe mensagens e alertas para o leiturista, informando sobre o status das operações, erros, avisos e notificações importantes.\n* **Configuração da Impressora:** Permite configurar a impressora bluetooth para a emissão das faturas.\n\n**Áreas de Maior Complexidade e Risco:**\n\n* **Integração com o Sistema de Faturamento:** A integração em tempo real com o sistema de faturamento da SANASA exige uma comunicação robusta e segura, com mecanismos de tratamento de erros e garantia da entrega dos dados.\n* **Cálculo de Consumo e Emissão de Faturas:**  A precisão do cálculo do consumo e a emissão de faturas corretas são cruciais para a operação da SANASA. Erros nesses processos podem gerar perdas financeiras, reclamações de clientes e problemas legais.\n* **Segurança e Controle de Acesso:** O sistema deve garantir a segurança dos dados dos clientes e o acesso restrito às funcionalidades do sistema, evitando fraudes, vazamento de informações e uso indevido da aplicação.\n* **Usabilidade e Experiência do Usuário:** O sistema precisa ser intuitivo, fácil de usar e eficiente, para que os leituristas possam realizar suas tarefas com rapidez e precisão, minimizando erros e otimizando o tempo em campo.\n\n**Tecnologias:**\n\n* **Plataforma:** Android (para o aplicativo móvel).\n* **Backend:** Linguagem de programação e tecnologias não especificadas.\n* **Banco de Dados:**  Não especificado.\n* **Comunicação:** API REST, protocolo HTTP, Bluetooth.\n\n**Requisitos Não Funcionais:**\n\n* **Desempenho:**  O sistema deve ser responsivo, com tempos de resposta rápidos para as operações, garantindo a agilidade do processo de leitura e emissão de faturas.\n* **Confiabilidade:**  O sistema deve ser confiável e estável, minimizando erros, falhas e interrupções nas operações.\n* **Segurança:** O sistema deve ser seguro, protegendo os dados dos clientes e garantindo o acesso restrito às funcionalidades.\n* **Usabilidade:** O sistema deve ser intuitivo, fácil de usar e eficiente, com interface amigável e navegação simples.\n* **Manutenibilidade:** O sistema deve ser fácil de manter e atualizar, permitindo a implementação de novas funcionalidades e a correção de erros de forma ágil.\n\n**Conclusão:**\n\nO novo sistema de Leitura e Emissão de Faturas Simultânea representa um avanço tecnológico significativo para a SANASA. Com funcionalidades completas, integração em tempo real e foco na usabilidade, o sistema tem o potencial de otimizar as operações de leitura, reduzir custos, aumentar a eficiência e melhorar a experiência dos clientes. No entanto, a implementação do sistema exige atenção especial para a segurança dos dados, a robustez da integração com o sistema de faturamento e a usabilidade da interface, para garantir que o sistema atenda às expectativas da SANASA e dos seus clientes.\n\n",
                ],
            },
            {
                "role": "user",
                "parts": [
                    'Ótimo! Agora gere para mim o documento "Módulos e Casos de Teste" do software Sistema de Leitura e Emissão de Faturas Simultânea.\n',
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Módulos e Casos de Teste - Sistema de Leitura e Emissão de Faturas Simultânea\n\n**1. Módulos:**\n\n**1.1 Autenticação e Segurança:**\n*  Abrange as funcionalidades de login, controle de acesso, gestão de usuários e segurança do sistema.\n\n**1.2 Gerenciamento de Tarefas:**\n*  Inclui as funcionalidades relacionadas à recepção, organização e visualização das tarefas de leitura do dia, incluindo filtros, ordenação e informações sobre o roteiro.\n\n**1.3 Registro de Leituras:**\n*  Compreende as funcionalidades de registro da leitura do hidrômetro, validação do consumo, detecção de anomalias, registro de ocorrências, edição de leituras e navegação entre imóveis.\n\n**1.4 Cálculo de Consumo e Emissão de Faturas:**\n*  Abrange as funcionalidades de cálculo do consumo de água, aplicação de tarifas, geração e impressão de faturas, incluindo QR Code para pagamento via PIX e código de barras. \n\n**1.5 Gestão de Dados do Consumidor:**\n*  Inclui as funcionalidades de consulta, visualização e atualização dos dados cadastrais do consumidor, como nome, endereço, categoria, tipo de ligação, histórico de consumo, etc.\n\n**1.6 Gerenciamento de Ocorrências:**\n*  Compreende as funcionalidades de registro, consulta, edição e gerenciamento das ocorrências encontradas em campo, com uma lista de ocorrências pré-definidas e a possibilidade de adicionar comentários.\n\n**1.7 Impressão de Relatórios:**\n*  Abrange a geração e impressão de relatórios de acompanhamento das atividades do leiturista, como lista de leituras realizadas, ocorrências registradas, pendências, consumo por categoria, etc.\n\n**1.8 Sincronização de Dados:**\n*  Inclui as funcionalidades de sincronização manual e automática dos dados entre o aplicativo móvel e o backend, garantindo a consistência e atualização das informações.\n\n**1.9 Gerenciamento de Mensagens:**\n*  Compreende as funcionalidades de exibição de mensagens e alertas para o leiturista, como notificações sobre o status das operações, erros, avisos e informações importantes.\n\n**1.10 Configuração da Impressora:**\n*  Abrange as funcionalidades de configuração da impressora bluetooth, como pareamento, teste de impressão e seleção da impressora padrão.\n\n\n**2. Casos de Teste:**\n\n**2.1 Autenticação e Segurança:**\n\n* **CT-01:** Login com Sucesso - Verificar se um usuário válido consegue efetuar login no sistema com suas credenciais corretas.\n* **CT-02:** Login com Falha - Verificar se o sistema impede o acesso de usuários com credenciais inválidas (matrícula ou senha incorreta).\n* **CT-03:** Timeout da Sessão - Verificar se o sistema encerra a sessão do usuário após um período de inatividade predefinido (15 minutos).\n* **CT-04:** Controle de Acesso - Verificar se o sistema restringe o acesso às funcionalidades de acordo com o perfil do usuário (leiturista, supervisor, administrador).\n\n**2.2 Gerenciamento de Tarefas:**\n\n* **CT-05:** Carregamento da Tarefa do Dia - Verificar se o sistema carrega corretamente a lista de tarefas de leitura do dia para o leiturista logado.\n* **CT-06:** Filtragem de Tarefas - Verificar se o sistema permite filtrar as tarefas por logradouro, setor de leitura ou outras informações relevantes.\n* **CT-07:** Ordenação de Tarefas - Verificar se o sistema permite ordenar as tarefas por número do imóvel, código do consumidor ou outros critérios.\n* **CT-08:** Visualização do Roteiro - Verificar se o sistema exibe o mapa do roteiro de leitura, com a localização dos imóveis a serem visitados.\n\n**2.3 Registro de Leituras:**\n\n* **CT-09:** Registro de Leitura Normal - Verificar se é possível registrar uma leitura normal, dentro dos parâmetros de consumo esperados.\n* **CT-10:** Registro de Leitura Anormal - Verificar se o sistema detecta e alerta sobre leituras anormais, solicitando confirmação do leiturista e registrando a ocorrência.\n* **CT-11:** Registro de Leitura com Ocorrência - Verificar se é possível registrar uma leitura com ocorrência, selecionando a ocorrência adequada na lista. \n* **CT-12:** Edição de Leitura - Verificar se é possível editar uma leitura já registrada, corrigindo erros ou atualizando informações.\n* **CT-13:** Navegação entre Imóveis - Verificar se o sistema permite navegar entre os imóveis da tarefa, avançando e retrocedendo na lista.\n\n**2.4 Cálculo de Consumo e Emissão de Faturas:**\n\n* **CT-14:** Cálculo de Consumo Normal - Verificar se o sistema calcula corretamente o consumo de água para leituras normais.\n* **CT-15:** Cálculo de Consumo com Virada de Hidrômetro - Verificar se o sistema calcula corretamente o consumo quando ocorre a virada do hidrômetro.\n* **CT-16:** Cálculo de Consumo com Ocorrências - Verificar se o sistema aplica as regras de cálculo de consumo para leituras com ocorrências.\n* **CT-17:** Emissão de Fatura Normal - Verificar se o sistema gera e imprime a fatura corretamente para leituras normais, com layout e informações corretas, QR Code e código de barras válidos.\n* **CT-18:** Emissão de Fatura com Ocorrências - Verificar se o sistema emite a fatura corretamente para leituras com ocorrências, aplicando as regras de emissão de acordo com o tipo de ocorrência.\n\n**2.5 Gestão de Dados do Consumidor:**\n\n* **CT-19:** Consulta de Dados do Consumidor - Verificar se é possível consultar os dados cadastrais do consumidor, como nome, endereço, categoria, histórico de consumo, etc.\n* **CT-20:** Atualização de Dados do Consumidor - Verificar se é possível atualizar os dados cadastrais do consumidor, como endereço de entrega, telefone, email, etc.\n\n**2.6 Gerenciamento de Ocorrências:**\n\n* **CT-21:** Registro de Ocorrência - Verificar se é possível registrar uma ocorrência, selecionando a ocorrência adequada na lista e adicionando comentários. \n* **CT-22:** Consulta de Ocorrências - Verificar se é possível consultar as ocorrências registradas para um imóvel ou consumidor.\n* **CT-23:** Edição de Ocorrência - Verificar se é possível editar uma ocorrência já registrada, corrigindo informações ou adicionando novos comentários.\n\n**2.7 Impressão de Relatórios:**\n\n* **CT-24:** Relatório de Leituras Realizadas - Verificar se o sistema gera um relatório com a lista de leituras realizadas, com informações como data, hora, leitura atual, consumo, ocorrências, etc.\n* **CT-25:** Relatório de Ocorrências Registradas - Verificar se o sistema gera um relatório com a lista de ocorrências registradas, com informações como data, hora, tipo de ocorrência, descrição, etc.\n* **CT-26:** Relatório de Pendências - Verificar se o sistema gera um relatório com a lista de imóveis com leituras pendentes, ocorrências não resolvidas ou outras pendências.\n\n**2.8 Sincronização de Dados:**\n\n* **CT-27:** Sincronização Manual - Verificar se é possível sincronizar os dados manualmente entre o aplicativo móvel e o backend.\n* **CT-28:** Sincronização Automática - Verificar se o sistema realiza a sincronização automática dos dados em background, quando há conexão com a internet.\n\n**2.9 Gerenciamento de Mensagens:**\n\n* **CT-29:** Exibição de Mensagens de Status - Verificar se o sistema exibe mensagens informativas sobre o status das operações, como "Leitura registrada com sucesso", "Erro ao enviar dados para o servidor", etc.\n* **CT-30:** Exibição de Alertas - Verificar se o sistema exibe alertas sobre erros críticos, como "Falha na conexão com a impressora", "Bateria fraca", etc.\n* **CT-31:** Notificações - Verificar se o sistema envia notificações para o leiturista sobre novas tarefas, mensagens importantes, atualizações do sistema, etc.\n\n**2.10 Configuração da Impressora:**\n\n* **CT-32:** Pareamento da Impressora - Verificar se é possível parear o aplicativo móvel com a impressora bluetooth.\n* **CT-33:** Teste de Impressão - Verificar se é possível realizar um teste de impressão para validar a comunicação com a impressora.\n* **CT-34:** Seleção da Impressora Padrão - Verificar se é possível selecionar a impressora padrão para a emissão das faturas.\n\n**Observações:**\n\n* Esta lista de casos de teste é um guia inicial. A equipe de testes deve analisar a documentação detalhada do sistema e identificar outros casos de teste relevantes para garantir a qualidade e o bom funcionamento do software. \n* A prioridade dos casos de teste deve ser definida levando em consideração o risco, a criticidade e o impacto de cada funcionalidade. \n* É recomendado utilizar ferramentas de gestão de testes para organizar, documentar, executar e acompanhar os testes.\n\n**Conclusão:**\n\nA definição dos módulos e a criação de casos de teste abrangentes são fundamentais para garantir a qualidade do software e o sucesso da implantação do sistema de Leitura e Emissão de Faturas Simultânea da SANASA. A execução dos testes permitirá identificar e corrigir falhas, garantindo que o sistema atenda aos requisitos da empresa e ofereça uma experiência positiva para os usuários.\n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    'Ótimo! Agora gere para mim o documento "Especificidade do Módulo" do módulo "Cálculo de Consumo e Emissão de Faturas" do software Sistema de Leitura e Emissão de Faturas Simultânea.\n',
                ],
            },
            {
                "role": "model",
                "parts": [
                    "## Especificidade do Módulo: 1.4 Cálculo de Consumo e Emissão de Faturas - Sistema de Leitura e Emissão de Faturas Simultânea\n\n**1.4.1 CT-14: Cálculo de Consumo Normal:**\n\n* **Nome do Teste:** CT-14 - Cálculo de Consumo Normal\n* **Descrição:** Verificar se o sistema calcula corretamente o consumo de água para leituras normais, considerando a leitura atual, leitura anterior e o número de economias do imóvel.\n* **Nível de Criticidade:** Alta - Erros no cálculo do consumo podem gerar faturas incorretas, impactando a receita da SANASA e a satisfação dos clientes.\n\n**1.4.2 CT-15: Cálculo de Consumo com Virada de Hidrômetro:**\n\n* **Nome do Teste:** CT-15 - Cálculo de Consumo com Virada de Hidrômetro\n* **Descrição:** Verificar se o sistema calcula corretamente o consumo de água quando ocorre a virada do hidrômetro, levando em conta o número de dígitos do hidrômetro e aplicando a fórmula específica para cada caso.\n* **Nível de Criticidade:** Alta -  Erros no cálculo do consumo em casos de virada do hidrômetro podem gerar faturas inconsistentes e prejudicar a análise do consumo real do cliente.\n\n**1.4.3 CT-16: Cálculo de Consumo com Ocorrências:**\n\n* **Nome do Teste:** CT-16 - Cálculo de Consumo com Ocorrências\n* **Descrição:** Verificar se o sistema aplica as regras de cálculo de consumo para leituras com ocorrências, considerando o tipo de ocorrência e os parâmetros específicos de cada ocorrência (ex: média de consumo, leitura anterior, etc.).\n* **Nível de Criticidade:** Alta - O sistema deve garantir que o cálculo do consumo seja realizado de forma precisa, mesmo em situações com ocorrências, evitando cobranças indevidas ou prejuízo para a SANASA.\n\n**1.4.4 CT-17: Emissão de Fatura Normal:**\n\n* **Nome do Teste:** CT-17 - Emissão de Fatura Normal\n* **Descrição:**  Verificar se o sistema gera e imprime a fatura corretamente para leituras normais, com layout e informações corretas, como dados do consumidor, endereço, consumo, valor da fatura, data de vencimento, QR Code para pagamento via PIX e código de barras para pagamento via boleto.\n* **Nível de Criticidade:** Alta -  A emissão de faturas corretas e legíveis é fundamental para a cobrança dos serviços e a satisfação dos clientes.\n\n**1.4.5 CT-18: Emissão de Fatura com Ocorrências:**\n\n* **Nome do Teste:** CT-18 - Emissão de Fatura com Ocorrências\n* **Descrição:** Verificar se o sistema emite a fatura corretamente para leituras com ocorrências, aplicando as regras de emissão de acordo com o tipo de ocorrência, como:\n    *  Não emitir fatura para ocorrências que impedem a cobrança (ex: ligação cortada, hidrômetro retirado).\n    *  Emitir fatura com mensagem específica para ocorrências que requerem atenção do cliente (ex: vazamento, consumo excessivo).\n    *  Ajustar o valor da fatura para ocorrências que impactam o consumo (ex: leitura estimada, consumo mínimo).\n* **Nível de Criticidade:** Alta -  A emissão de faturas em casos de ocorrências exige atenção especial para garantir que as informações sejam claras, precisas e adequadas à situação, evitando conflitos com os clientes. \n",
                ],
            },
            {
                "role": "user",
                "parts": [
                    'Ótimo! Agora gere para mim o documento "Especificidade do Caso de Teste" do caso de teste "CT-18: Emissão de Fatura com Ocorrências" do módulo "Cálculo de Consumo e Emissão de Faturas" do software Sistema de Leitura e Emissão de Faturas Simultânea.',
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Especificidade do Caso de Teste: CT-18 - Emissão de Fatura com Ocorrências - Sistema de Leitura e Emissão de Faturas Simultânea\n\n**ID:** CT-18\n\n**Objetivo:** Verificar se o sistema emite a fatura corretamente para leituras com ocorrências, aplicando as regras de emissão de acordo com o tipo de ocorrência.\n\n**Pré-condições:**\n\n* O usuário (leiturista) deve estar logado no sistema.\n* A impressora bluetooth deve estar configurada e conectada ao dispositivo móvel.\n* O sistema deve ter carregado os dados da tarefa do dia, incluindo as informações dos imóveis e as ocorrências cadastradas.\n\n**Ambiente:** Dispositivo móvel com o sistema de Leitura e Emissão de Faturas Simultânea instalado e impressora bluetooth conectada.\n\n**Dados de Entrada:**\n\n* **Imóvel:** Selecionar um imóvel da lista de tarefas do dia que possua uma ocorrência registrada. \n* **Leitura Atual:** Informar a leitura atual do hidrômetro, de acordo com a situação encontrada em campo. \n* **Ocorrência:** Selecionar a ocorrência correspondente à situação encontrada no imóvel (ex: "Hidrômetro Quebrado", "Imóvel Fechado", "Vazamento").\n* **Observações:** (opcional) Adicionar comentários sobre a ocorrência, se necessário.\n\n**Procedimentos:**\n\n1. Acessar o módulo "Registro de Leituras".\n2. Selecionar o imóvel com ocorrência na lista de tarefas.\n3. Informar a leitura atual do hidrômetro.\n4. Selecionar a ocorrência na lista de ocorrências disponíveis.\n5. (Opcional) Adicionar observações sobre a ocorrência.\n6. Confirmar a leitura e a ocorrência.\n7. O sistema deverá processar a leitura, calcular o consumo (se aplicável) e gerar a fatura.\n8. Confirmar a emissão da fatura.\n9. O sistema deverá enviar os dados para a impressora bluetooth.\n\n**Resultados Esperados:**\n\n* **Cenário 1: Ocorrência que Impede a Cobrança:**\n    * O sistema **não deve emitir a fatura**.\n    * O sistema deve exibir uma mensagem informando que a fatura não será emitida devido à ocorrência (ex: "Fatura não emitida. Imóvel com ligação cortada.").\n    * O sistema deve registrar a ocorrência no banco de dados, associada ao imóvel.\n\n* **Cenário 2: Ocorrência que Requer Atenção do Cliente:**\n    * O sistema **deve emitir a fatura**.\n    * A fatura deve conter uma mensagem específica sobre a ocorrência, informando o cliente sobre a situação e as providências a serem tomadas (ex: "Atenção: Vazamento detectado. Favor entrar em contato com a SANASA.").\n\n* **Cenário 3: Ocorrência que Impacta o Consumo:**\n    * O sistema **deve emitir a fatura**.\n    * O valor da fatura deve ser ajustado de acordo com a regra de cálculo para a ocorrência específica (ex: cobrança de consumo mínimo, aplicação de média de consumo, etc.).\n    * A fatura deve conter uma mensagem explicando o motivo do ajuste no valor da fatura (ex: "Consumo calculado pela média dos últimos 3 meses devido a hidrômetro quebrado.").\n\n**Pontos de Verificação:**\n\n* Verificar se a fatura foi emitida ou não, de acordo com o tipo de ocorrência.\n* Verificar se a mensagem na fatura está correta e clara para o cliente.\n* Verificar se o valor da fatura está correto, de acordo com as regras de cálculo para a ocorrência.\n* Verificar se os dados da fatura (QR Code, código de barras, informações do cliente, etc.) estão corretos.\n* Verificar se a ocorrência foi registrada no banco de dados, associada ao imóvel.\n\n**Prioridade:** Alta\n\n**Criticidade:** Alta\n\n**Data/Hora:** [Data e hora do teste]\n\n**Automação:** Parcialmente - A emissão da fatura na impressora pode ser verificada manualmente.\n\n**Interdependências:** Módulos "Registro de Leituras", "Cálculo de Consumo" e "Configuração da Impressora".\n\n**Analista Responsável:** [Nome do Analista]\n\n**Observações:**\n\n* É importante testar diferentes tipos de ocorrências para garantir que o sistema se comporte corretamente em cada situação.\n* O teste deve ser repetido para diferentes imóveis e leituras, para garantir a cobertura dos cenários possíveis.\n\n**Sugestões:**\n\n* Criar um conjunto de dados de teste com diferentes ocorrências e cenários para facilitar a execução do teste.\n* Automatizar a validação dos dados da fatura (QR Code, código de barras, etc.) utilizando ferramentas de OCR (Optical Character Recognition).\n\n**Conclusão:**\n\nO caso de teste CT-18 é crucial para garantir que o sistema de Leitura e Emissão de Faturas Simultânea da SANASA esteja funcionando corretamente na emissão de faturas em situações com ocorrências. A execução do teste com diferentes cenários permitirá validar as regras de negócio da SANASA e garantir a precisão, a clareza e a confiabilidade das informações nas faturas emitidas.\n\n\n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    'Ótimo! Agora gere para mim o documento "Quantificação Total" do software Sistema de Leitura e Emissão de Faturas Simultânea.',
                ],
            },
            {
                "role": "model",
                "parts": [
                    '## Quantificação Total - Sistema de Leitura e Emissão de Faturas Simultânea\n\n**Número de Casos de Teste por Módulo:**\n\n| Módulo                          | Total de Casos de Teste |\n|-----------------------------------|-----------------------|\n| Autenticação e Segurança          | 4                      |\n| Gerenciamento de Tarefas          | 4                      |\n| Registro de Leituras             | 5                      |\n| Cálculo de Consumo e Emissão de Faturas | 5                      |\n| Gestão de Dados do Consumidor    | 2                      |\n| Gerenciamento de Ocorrências      | 3                      |\n| Impressão de Relatórios            | 3                      |\n| Sincronização de Dados           | 2                      |\n| Gerenciamento de Mensagens       | 3                      |\n| Configuração da Impressora        | 3                      |\n\n**Total de Casos de Teste:** 34\n\n**Observações:**\n\n* Esta quantificação considera os casos de teste listados no documento "Módulos e Casos de Teste".\n* O número total de casos de teste pode variar, dependendo da complexidade do sistema e do nível de detalhamento desejado nos testes. \n* É importante realizar uma análise de risco para identificar as áreas do sistema que requerem maior atenção durante os testes e definir o número adequado de casos de teste para cada módulo.\n\n**Conclusão:**\n\nO Sistema de Leitura e Emissão de Faturas Simultânea possui um total de 34 casos de teste, distribuídos entre os 10 módulos principais. Essa quantificação inicial fornece uma base para o planejamento e execução das atividades de teste, garantindo que todas as funcionalidades do sistema sejam verificadas com o devido rigor. \n',
                ],
            },
            {
                "role": "user",
                "parts": [
                    'Ótimo! Agora gere para mim o documento "Quantificação por Criticidade" do software Sistema de Leitura e Emissão de Faturas Simultânea.',
                ],
            },
            {
                "role": "model",
                "parts": [
                    "## Quantificação por Criticidade - Sistema de Leitura e Emissão de Faturas Simultânea\n\n**Quantificação por Criticidade (Módulo):**\n\n| Módulo                          | Alta | Média | Baixa | Total |\n|-----------------------------------|------|-------|-------|-------|\n| Autenticação e Segurança          | 3    | 1     | 0     | 4     |\n| Gerenciamento de Tarefas          | 1    | 3     | 0     | 4     |\n| Registro de Leituras             | 4    | 1     | 0     | 5     |\n| Cálculo de Consumo e Emissão de Faturas | 5    | 0     | 0     | 5     |\n| Gestão de Dados do Consumidor    | 1    | 1     | 0     | 2     |\n| Gerenciamento de Ocorrências      | 2    | 1     | 0     | 3     |\n| Impressão de Relatórios            | 1    | 2     | 0     | 3     |\n| Sincronização de Dados           | 2    | 0     | 0     | 2     |\n| Gerenciamento de Mensagens       | 1    | 2     | 0     | 3     |\n| Configuração da Impressora        | 1    | 2     | 0     | 3     |\n\n**Quantificação por Criticidade (Total):**\n\n| Nível de Criticidade | Total de Casos de Teste |\n|----------------------|-----------------------|\n| Alta                 | 21                     |\n| Média                | 13                     |\n| Baixa                | 0                      |\n\n**Observações:**\n\n* A quantificação por criticidade considera a classificação de cada caso de teste, levando em conta o impacto potencial de um defeito no sistema e a importância da funcionalidade para a operação da SANASA.\n* A priorização dos testes deve ser baseada no nível de criticidade, dedicando mais tempo e atenção aos testes de alta criticidade, que representam maior risco para o sistema e para a empresa.\n\n**Conclusão:**\n\nO Sistema de Leitura e Emissão de Faturas Simultânea possui 21 casos de teste de alta criticidade, 13 casos de teste de média criticidade e nenhum caso de teste de baixa criticidade. Essa informação auxilia a equipe de testes a definir a estratégia de testes, priorizar as atividades e alocar os recursos de forma eficiente, garantindo que as funcionalidades mais críticas do sistema sejam testadas com o rigor necessário.\n\n",
                ],
            },
        ]
    )
    return chat_session


async def analyze_documentation(file_path):
    model = create_model()
    chat_session = training_model(model)
    # Carregar o PDF
    pdf_file = upload_to_gemini(file_path, mime_type="application/pdf")
    wait_for_files_active([pdf_file])
    raw_response_prensation = chat_session.send_message(f"Segue documentação de outro software para análise {pdf_file}. \n Analise e comece produzindo o documento 'Overview'")


    # Enviar o PDF na sessão de chat
    raw_response_overview = chat_session.send_message(f"Produza o documento 'Overview' da documentação do software anexado {pdf_file}")
    raw_response_módulo_e_casos_de__teste = chat_session.send_message(f"Produza o documento 'Módulos e Casos de Teste' da documentação do software anexo {pdf_file}")
    # raw_response_módulo_e_casos_de__teste_ = chat_session.send_message(f"Produza o documento 'Módulos e Casos de Teste' da documentação do software anexo {pdf_file}")
    # raw_response_módulo_e_casos_de__teste_ = chat_session.send_message(f"Produza o documento 'Módulos e Casos de Teste' da documentação do software anexo {pdf_file}")
    # raw_response_módulo_e_casos_de__teste_ = chat_session.send_message(f"Produza o documento 'Módulos e Casos de Teste' da documentação do software anexo {pdf_file}")
    raw_response = raw_response_overview.text + raw_response
    
    response = json.loads(raw_response.text)
    return response


# response = chat_session.send_message("INSERT_INPUT_HERE")

# print(response.text)
